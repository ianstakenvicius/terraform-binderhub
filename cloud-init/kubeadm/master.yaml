#cloud-config
packages:
  - nfs-kernel-server

runcmd:
  # NFS data
  - mkdir -p /DATA
  - echo "192.168.73.25:/DATA      /DATA      nfs rw,noatime,nolock,hard,tcp 0 0" >> /etc/fstab
  - mount -a
  # NFS
  - echo "/shared `hostname -I | awk '{print $1}' | grep -Po '(\d+\.){3}'`0/24(rw,sync,no_root_squash,no_all_squash)" > /etc/exports
  - mkdir -p /shared
  - chown ${admin_user} /shared
  - systemctl enable nfs-kernel-server
  - systemctl restart nfs-kernel-server
  # Kubeadm  
  - echo "SUDO_UID=${admin_user} sudo -E /tmp/kubeadm-bootstrap/init-master.bash" >> /tmp/install.sh
  - su ${admin_user} -c "/tmp/install.sh"
  - kubeadm token create --print-join-command > /shared/kubeadm-join.bash
  - kubectl label nodes `hostname` type=production  
  # k8s commands
  - cat /tmp/kubeadm-bootstrap/.bashrc >> /home/ubuntu/.bashrc
  # Authorizing root authentification
  - sudo cp /tmp/kubeadm-bootstrap/authorized_keys /shared/
  - sudo mv /tmp/kubeadm-bootstrap/authorized_keys /root/.ssh/
  # ssh config for nodes
  # make sure that k8s node is ready
  - sudo mv /tmp/kubeadm-bootstrap/add_nodes.bash /home/ubuntu/
  - sudo mv /tmp/kubeadm-bootstrap/config /home/ubuntu/.ssh/
  - sudo chmod a+x /home/ubuntu/add_nodes.bash;
  - sudo chgrp ubuntu /home/ubuntu/.ssh/config;
  - sudo chown ubuntu /home/ubuntu/.ssh/config;
  - echo "|||||||||||||||||"
  - echo $nb_nodes
  - echo "|||||||||||||||||"
  - while [ $(kubectl get nodes --selector='!node-role.kubernetes.io/master' -o jsonpath='{range .items[*].status.addresses[?(@.type=="InternalIP")]}{.address} {end}' | wc -w) -ne $nb_nodes ]; do sleep 5; done;
  - sudo bash /home/ubuntu/add_nodes.bash
  # creating flag to say that master configuration finished
  - touch /shared/k8s-initialized
