#cloud-config
packages:
  - nfs-kernel-server

runcmd:
  # NFS data
  - mkdir -p /DATA
  - echo "192.168.73.25:/DATA      /DATA      nfs rw,noatime,nolock,hard,tcp 0 0" >> /etc/fstab
  - mount -a
  # NFS
  - echo "/shared `hostname -I | awk '{print $1}' | grep -Po '(\d+\.){3}'`0/24(rw,sync,no_root_squash,no_all_squash)" > /etc/exports
  - mkdir -p /shared
  - chown ${admin_user} /shared
  - systemctl enable nfs-kernel-server
  - systemctl restart nfs-kernel-server
  # Kubeadm  
  - echo "SUDO_UID=${admin_user} sudo -E /tmp/kubeadm-bootstrap/init-master.bash" >> /tmp/install.sh
  - su ${admin_user} -c "/tmp/install.sh"
  - kubeadm token create --print-join-command > /shared/kubeadm-join.bash
  - kubectl label nodes `hostname` type=production  
  # k8s commands
  - cat /tmp/kubeadm-bootstrap/.bashrc >> /home/ubuntu/.bashrc
  # docker configuration for kubernetes
  - sudo mv /tmp/kubeadm-bootstrap/authorized_keys /root/.ssh/
  - nodes=$(kubectl get nodes -o jsonpath='{range .items[*].status.addresses[?(@.type=="InternalIP")]}{.address} {end}')
  - sudo docker login binder-registry.conp.cloud -u ${docker_id} -p ${docker_password}
  - for n in $nodes; do scp ~/.docker/config.json root@$n:/var/lib/kubelet/config.json; done
